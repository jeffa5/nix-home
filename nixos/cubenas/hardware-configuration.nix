# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = [
    "ehci_pci"
    "ata_piix"
    "uhci_hcd"
    "xhci_pci_renesas"
    "usb_storage"
    "usbhid"
    "sd_mod"
  ];
  boot.initrd.kernelModules = [];
  boot.kernelModules = ["kvm-intel"];
  boot.extraModulePackages = [];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/c114b7cd-93b6-46fc-8499-a1f41be494c3";
    fsType = "btrfs";
  };

  fileSystems."/local" = {
    device = "/dev/disk/by-uuid/203e1fec-9e97-4e72-9aea-9a40695d3167";
    fsType = "btrfs";
  };

  # local binds
  fileSystems."/var/lib/${config.services.prometheus.stateDir}" = {
    device = "/local/prometheus";
    options = ["bind"];
  };
  fileSystems."${config.services.loki.dataDir}" = {
    device = "/local/loki";
    options = ["bind"];
  };
  fileSystems."${config.services.zigbee2mqtt.dataDir}" = {
    device = "/local/zigbee2mqtt";
    options = ["bind"];
  };
  fileSystems."${config.services.mosquitto.dataDir}" = {
    device = "/local/mosquitto";
    options = ["bind"];
  };
  fileSystems."/var/lib/influxdb2" = {
    device = "/local/influxdb2";
    options = ["bind"];
  };
  fileSystems."/var/lib/${config.services.jellyfin.dataDir}" = {
    device = "/local/jellyfin/data";
    options = ["bind"];
  };
  fileSystems."/var/lib/${config.services.jellyfin.cacheDir}" = {
    device = "/local/jellyfin/cache";
    options = ["bind"];
  };
  fileSystems."/var/lib/git-server" = {
    device = "/local/git";
    options = ["bind"];
  };
  fileSystems."${config.services.nextcloud.datadir}"= {
    device = "/local/nextcloud";
    options = ["bind"];
  };

  swapDevices = [];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno2.useDHCP = lib.mkDefault true;
  # networking.interfaces.ens1f0.useDHCP = lib.mkDefault true;
  # networking.interfaces.ens1f1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
